-- MySQL Script generated by MySQL Workbench
-- Fri Jun 16 21:50:01 2017
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema ElephantryDb
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema ElephantryDb
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `ElephantryDb` DEFAULT CHARACTER SET utf8 ;
USE `ElephantryDb` ;

-- -----------------------------------------------------
-- Table `ElephantryDb`.`Role`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ElephantryDb`.`Role` (
  `RoleId` VARCHAR(10) NOT NULL,
  `RoleName` NVARCHAR(50) NOT NULL,
  PRIMARY KEY (`RoleId`),
  UNIQUE INDEX `RoleId_UNIQUE` (`RoleId` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ElephantryDb`.`Package`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ElephantryDb`.`Package` (
  `PackageId` INT NOT NULL,
  `PackageName` NVARCHAR(50) NOT NULL,
  `Price` DOUBLE NULL,
  `Storage` DOUBLE NOT NULL,
  `Priority` INT NULL,
  PRIMARY KEY (`PackageId`),
  UNIQUE INDEX `PackageId_UNIQUE` (`PackageId` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ElephantryDb`.`User`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ElephantryDb`.`User` (
  `UserId` INT NOT NULL AUTO_INCREMENT,
  `Email` NVARCHAR(512) NOT NULL,
  `Password` TEXT NOT NULL,
  `Active` TINYINT NOT NULL DEFAULT 1,
  `CreatedTime` DATETIME NOT NULL DEFAULT NOW(),
  `RoleId` VARCHAR(10) NOT NULL,
  PRIMARY KEY (`UserId`),
  INDEX `fk_User_Role1_idx` (`RoleId` ASC),
  UNIQUE INDEX `Email_UNIQUE` (`Email` ASC),
  CONSTRAINT `fk_User_Role1`
    FOREIGN KEY (`RoleId`)
    REFERENCES `ElephantryDb`.`Role` (`RoleId`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ElephantryDb`.`Feedback`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ElephantryDb`.`Feedback` (
  `FeedbackId` INT NOT NULL AUTO_INCREMENT,
  `Content` TEXT NOT NULL,
  `CreatedTime` DATETIME NULL DEFAULT NOW(),
  `UserId` INT NOT NULL,
  PRIMARY KEY (`FeedbackId`),
  INDEX `fk_Feedback_User1_idx` (`UserId` ASC),
  CONSTRAINT `fk_Feedback_User1`
    FOREIGN KEY (`UserId`)
    REFERENCES `ElephantryDb`.`User` (`UserId`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ElephantryDb`.`Country`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ElephantryDb`.`Country` (
  `CountryId` INT NOT NULL,
  `CountryName` NVARCHAR(100) NOT NULL,
  PRIMARY KEY (`CountryId`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ElephantryDb`.`Province`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ElephantryDb`.`Province` (
  `ProvinceId` INT NOT NULL,
  `ProvinceName` NVARCHAR(512) NOT NULL,
  `CountryId` INT NOT NULL,
  PRIMARY KEY (`ProvinceId`),
  INDEX `fk_Province_Country1_idx` (`CountryId` ASC),
  CONSTRAINT `fk_Province_Country1`
    FOREIGN KEY (`CountryId`)
    REFERENCES `ElephantryDb`.`Country` (`CountryId`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ElephantryDb`.`RecommendType`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ElephantryDb`.`RecommendType` (
  `RecommendTypeId` INT NOT NULL,
  `RecommendTypeName` NVARCHAR(512) NOT NULL,
  `Description` TEXT NULL,
  PRIMARY KEY (`RecommendTypeId`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ElephantryDb`.`Translation`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ElephantryDb`.`Translation` (
  `TranslationKey` NVARCHAR(512) NOT NULL,
  `English` TEXT NOT NULL,
  `Vietnamese` TEXT NOT NULL,
  PRIMARY KEY (`TranslationKey`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ElephantryDb`.`Customer`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ElephantryDb`.`Customer` (
  `FirstName` NVARCHAR(512) NOT NULL,
  `LastName` NVARCHAR(512) NOT NULL,
  `Gender` NVARCHAR(100) NOT NULL,
  `DoB` DATE NULL,
  `Website` NVARCHAR(512) NULL,
  `Company` NVARCHAR(512) NULL,
  `Phone` NVARCHAR(100) NULL,
  `UserId` INT NOT NULL,
  `ProvinceId` INT NOT NULL,
  `PackageId` INT NOT NULL,
  INDEX `fk_Customer_User_idx` (`UserId` ASC),
  PRIMARY KEY (`UserId`),
  INDEX `fk_Customer_Province1_idx` (`ProvinceId` ASC),
  INDEX `fk_Customer_Package1_idx` (`PackageId` ASC),
  CONSTRAINT `fk_Customer_User`
    FOREIGN KEY (`UserId`)
    REFERENCES `ElephantryDb`.`User` (`UserId`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Customer_Province1`
    FOREIGN KEY (`ProvinceId`)
    REFERENCES `ElephantryDb`.`Province` (`ProvinceId`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Customer_Package1`
    FOREIGN KEY (`PackageId`)
    REFERENCES `ElephantryDb`.`Package` (`PackageId`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ElephantryDb`.`PaymentMethod`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ElephantryDb`.`PaymentMethod` (
  `PaymentMethodId` INT NOT NULL,
  `PaymentMethodName` NVARCHAR(512) NOT NULL,
  `Description` TEXT NULL,
  PRIMARY KEY (`PaymentMethodId`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ElephantryDb`.`NotificationType`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ElephantryDb`.`NotificationType` (
  `NotiTypeId` INT NOT NULL,
  `NotiName` NVARCHAR(512) NULL,
  `Description` NVARCHAR(1000) NULL,
  PRIMARY KEY (`NotiTypeId`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ElephantryDb`.`Notification`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ElephantryDb`.`Notification` (
  `NotiId` INT NOT NULL AUTO_INCREMENT,
  `Read` TINYINT NOT NULL DEFAULT 0,
  `Message` NVARCHAR(512) NOT NULL,
  `CreatedTime` DATETIME NOT NULL DEFAULT NOW(),
  `UserId` INT NOT NULL,
  `NotiTypeId` INT NOT NULL,
  PRIMARY KEY (`NotiId`),
  INDEX `fk_Notification_User1_idx` (`UserId` ASC),
  INDEX `fk_Notification_NotificationType1_idx` (`NotiTypeId` ASC),
  CONSTRAINT `fk_Notification_User1`
    FOREIGN KEY (`UserId`)
    REFERENCES `ElephantryDb`.`User` (`UserId`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Notification_NotificationType1`
    FOREIGN KEY (`NotiTypeId`)
    REFERENCES `ElephantryDb`.`NotificationType` (`NotiTypeId`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ElephantryDb`.`CustomerPaymentInfo`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ElephantryDb`.`CustomerPaymentInfo` (
  `CustomerPaymentInfoId` INT NOT NULL AUTO_INCREMENT,
  `CardNumber` NVARCHAR(100) NOT NULL,
  `CVV` NVARCHAR(10) NULL,
  `CardExpiredDate` DATE NULL,
  `CardOwner` NVARCHAR(512) NULL,
  `ExpiredDate` DATE NULL,
  `Customer_UserId` INT NOT NULL,
  PRIMARY KEY (`CustomerPaymentInfoId`),
  INDEX `fk_CustomerPaymentInfo_Customer1_idx` (`Customer_UserId` ASC),
  CONSTRAINT `fk_CustomerPaymentInfo_Customer1`
    FOREIGN KEY (`Customer_UserId`)
    REFERENCES `ElephantryDb`.`Customer` (`UserId`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ElephantryDb`.`RecommendationStatus`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ElephantryDb`.`RecommendationStatus` (
  `RecommendationStatusId` INT NOT NULL,
  `RecommendationStatusName` NVARCHAR(100) NOT NULL,
  `Description` TEXT NOT NULL,
  PRIMARY KEY (`RecommendationStatusId`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ElephantryDb`.`Recommendation`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ElephantryDb`.`Recommendation` (
  `RecommendationId` INT NOT NULL AUTO_INCREMENT,
  `Name` NVARCHAR(512) NOT NULL,
  `StartedTime` DATETIME NOT NULL DEFAULT NOW(),
  `FolderOutputURL` NVARCHAR(512) NULL,
  `FinishedTime` DATETIME NULL,
  `FolderInputURL` NVARCHAR(512) NULL,
  `NumOfItem` INT NOT NULL DEFAULT 10,
  `EstimatedDuration` DOUBLE NOT NULL,
  `Timer` DATETIME NULL,
  `UserId` INT NOT NULL,
  `RecommendationStatusId` INT NOT NULL,
  `RecommendTypeId` INT NOT NULL,
  PRIMARY KEY (`RecommendationId`),
  INDEX `fk_Recommendation_User1_idx` (`UserId` ASC),
  INDEX `fk_Recommendation_RecommendationStatus1_idx` (`RecommendationStatusId` ASC),
  INDEX `fk_Recommendation_RecommendType1_idx` (`RecommendTypeId` ASC),
  CONSTRAINT `fk_Recommendation_User1`
    FOREIGN KEY (`UserId`)
    REFERENCES `ElephantryDb`.`User` (`UserId`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Recommendation_RecommendationStatus1`
    FOREIGN KEY (`RecommendationStatusId`)
    REFERENCES `ElephantryDb`.`RecommendationStatus` (`RecommendationStatusId`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Recommendation_RecommendType1`
    FOREIGN KEY (`RecommendTypeId`)
    REFERENCES `ElephantryDb`.`RecommendType` (`RecommendTypeId`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ElephantryDb`.`PaymentHistory`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ElephantryDb`.`PaymentHistory` (
  `PaymentHistoryId` INT NOT NULL AUTO_INCREMENT,
  `Amount` DOUBLE NOT NULL,
  `CreatedTime` DATETIME NOT NULL DEFAULT NOW(),
  `PaymentMethodId` INT NOT NULL,
  `Customer_UserId` INT NOT NULL,
  PRIMARY KEY (`PaymentHistoryId`),
  INDEX `fk_PaymentHistory_PaymentMethod1_idx` (`PaymentMethodId` ASC),
  INDEX `fk_PaymentHistory_Customer1_idx` (`Customer_UserId` ASC),
  CONSTRAINT `fk_PaymentHistory_PaymentMethod1`
    FOREIGN KEY (`PaymentMethodId`)
    REFERENCES `ElephantryDb`.`PaymentMethod` (`PaymentMethodId`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_PaymentHistory_Customer1`
    FOREIGN KEY (`Customer_UserId`)
    REFERENCES `ElephantryDb`.`Customer` (`UserId`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ElephantryDb`.`UploadedFile`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ElephantryDb`.`UploadedFile` (
  `UploadedFileId` INT NOT NULL AUTO_INCREMENT,
  `FileName` TEXT NOT NULL,
  `FileSize` DOUBLE NOT NULL,
  `UploadedTime` DATETIME NOT NULL DEFAULT NOW(),
  `HDFSURL` NVARCHAR(512) NULL,
  `DeletedTime` DATETIME NULL,
  `UserId` INT NOT NULL,
  PRIMARY KEY (`UploadedFileId`),
  INDEX `fk_UploadedFile_User1_idx` (`UserId` ASC),
  CONSTRAINT `fk_UploadedFile_User1`
    FOREIGN KEY (`UserId`)
    REFERENCES `ElephantryDb`.`User` (`UserId`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ElephantryDb`.`Configuration`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ElephantryDb`.`Configuration` (
  `ConfigurationId` INT NOT NULL AUTO_INCREMENT,
  `Key` NVARCHAR(512) NOT NULL,
  `Value` NVARCHAR(512) NOT NULL,
  PRIMARY KEY (`ConfigurationId`))
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
